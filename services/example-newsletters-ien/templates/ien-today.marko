import contentList from "../graphql/fragments/content-list";
import GAM from "../config/gam";
import emailX from "../config/email-x";

$ const { website } = out.global;
$ const { newsletter, date, dateInfo } = data;
$ const targeting = {
  dayofweek: date.format("ddd"),
  nl_date: date.format("YYYY-MM-DD"),
  weeknum: dateInfo.weeknum,
  month: dateInfo.month,
  day: dateInfo.day,
  year: dateInfo.year,
  nl_name: newsletter.name,
  nl_id: newsletter.id,
};

<common-document newsletter=newsletter date=date>
  <common-banner-element
    name=newsletter.name
    date=date
    ad-unit=GAM.getAdUnit({ name: "header", alias: newsletter.alias, targeting })
  />

  <common-table width="630" align="center" class="main" padding=null spacing=null>
    <tr>
      <td>
        <div style="line-height:20px; font-size:2px;">&nbsp;</div>
        <common-default-header-block
          name=newsletter.name
          href=website.get("origin")
          image-src="/files/base/indm/ien/image/2016/03/ientoday.56f0149e9136a.png"
          bg-color="#ffffff"
        />
        <marko-newsletters-email-x-data|{ response }| decoded-params=["email", "send"]>
          <@ad-unit ...emailX.getAdUnit({ name: "header", alias: "ien-today" }) />
          <@params date=date email="%%emailaddr%%" send="%%jobid%%" />
          <if(response)>
            <!-- handle response in custom way -->
            <!-- data contains the emailx api response -->
            $ const { data, clickHref, imageSrc } = response;
            $ const { ad, deployment } = data;
            <!-- lets use the raw ad url directly (instead of redirecting) and instead append the emailx click url as a data attribute -->
            <!-- we'll also ad some data attributes about the ad and deployment -->
            <a
              href=ad.url
              data-advertiser-name=ad.advertiserName
              data-lineitem-name=ad.lineitemName
              data-ad-name=ad.name
              data-href=clickHref
              data-deployment-name=deployment.name
            >
              <!-- but we still need to render the normal ad image -->
              <img src=imageSrc width=ad.width height=ad.height />
            </a>
          </if>
          <else>
            $ console.log('no ad found. do something else here... (if applicable)')
          </else>
        </marko-newsletters-email-x-data>
      </td>
    </tr>
  </common-table>

  <common-table width="630" align="center" class="main" style="border-collapse:collapse;">

  </common-table>

  <marko-web-query|{ nodes }| name="newsletter-scheduled-content" params={
    date: date.valueOf(),
    newsletterId: newsletter.id,
    sectionName: "Featured Story",
    limit: 1,
    queryFragment: contentList,
  }>
    <for|node| of=nodes>
      <marko-core-obj-value|{ value: image }| obj=node field="primaryImage" as="object">
        <marko-newsletter-imgix
          src=image.src
          alt=image.alt
          options={ w: 150 }
          class="main"
          attrs={ border: 0, width: 150 }
        >
          <@link href=node.siteContext.url target="_blank" />
        </marko-newsletter-imgix>
      </marko-core-obj-value>
      <marko-core-obj-text tag="h4" obj=node field="name">
        <@link href=node.siteContext.url target="_blank" />
      </marko-core-obj-text>
      <marko-core-obj-text tag="p" obj=node field="teaser" html=true />
      <marko-core-obj-date tag="small" obj=node field="published" format="MMMM Do, YYYY" />
      <hr>
    </for>
  </marko-web-query>
  <hr>
  <marko-web-query|{ nodes }| name="newsletter-scheduled-content" params={
    date: date.valueOf(),
    newsletterId: newsletter.id,
    sectionName: "Co-Features",
    excludeContentTypes: ["TextAd"],
    queryFragment: contentList,
  }>
    <for|node| of=nodes>
      <marko-core-obj-value|{ value: image }| obj=node field="primaryImage" as="object">
        <marko-newsletter-imgix
          src=image.src
          alt=image.alt
          options={ w: 150 }
          class="main"
          attrs={ border: 0, width: 150 }
        >
          <@link href=node.siteContext.url target="_blank" />
        </marko-newsletter-imgix>
      </marko-core-obj-value>
      <marko-core-obj-text tag="h4" obj=node field="name">
        <@link href=node.siteContext.url target="_blank" />
      </marko-core-obj-text>
      <marko-core-obj-text tag="p" obj=node field="teaser" html=true />
      <marko-core-obj-date tag="small" obj=node field="published" format="MMMM Do, YYYY" />
      <hr>
    </for>
  </marko-web-query>
  <hr>
  <marko-web-query|{ nodes }| name="newsletter-scheduled-content" params={
    date: date.valueOf(),
    newsletterId: newsletter.id,
    sectionName: "Text Ad Sponsors",
    includeContentTypes: ["TextAd"],
    queryFragment: contentList,
  }>
    <for|node| of=nodes>
      <marko-core-obj-value|{ value: image }| obj=node field="primaryImage" as="object">
        <marko-newsletter-imgix
          src=image.src
          alt=image.alt
          options={ w: 150 }
          class="main"
          attrs={ border: 0, width: 150 }
        >
          <@link href=node.siteContext.url target="_blank" />
        </marko-newsletter-imgix>
      </marko-core-obj-value>
      <marko-core-obj-text tag="h4" obj=node field="name">
        <@link href=node.siteContext.url target="_blank" />
      </marko-core-obj-text>
      <if(node.type === "text-ad")>
        <marko-core-obj-text obj=node field="body" html=true />
      </if>
      <else>
        <marko-core-obj-text tag="p" obj=node field="teaser" html=true />
      </else>
      <if(node.type === "text-ad")>
        <marko-core-obj-text tag="p" obj=node field="linkText">
          <@link href=node.siteContext.url target="_blank" />
        </marko-core-obj-text>
      </if>
      <hr>
    </for>
  </marko-web-query>
  <hr>
  <marko-web-query|{ nodes }| name="newsletter-scheduled-content" params={
    date: date.valueOf(),
    newsletterId: newsletter.id,
    sectionName: "Main",
    queryFragment: contentList,
  }>
    <for|node| of=nodes>
      <marko-core-obj-value|{ value: image }| obj=node field="primaryImage" as="object">
        <marko-newsletter-imgix
          src=image.src
          alt=image.alt
          options={ w: 150 }
          class="main"
          attrs={ border: 0, width: 150 }
        >
          <@link href=node.siteContext.url target="_blank" />
        </marko-newsletter-imgix>
      </marko-core-obj-value>

      <marko-core-obj-text tag="h4" obj=node field="name">
        <@link href=node.siteContext.url target="_blank" />
      </marko-core-obj-text>
      <if(node.type === "text-ad")>
        <marko-core-obj-text obj=node field="body" html=true />
      </if>
      <else>
        <marko-core-obj-text tag="p" obj=node field="teaser" html=true />
      </else>
      <if(node.type === "text-ad")>
        <marko-core-obj-text tag="p" obj=node field="linkText">
          <@link href=node.siteContext.url target="_blank" />
        </marko-core-obj-text>
      </if>
      <else>
        <marko-core-obj-nodes|{ node: author }| obj=node field="authors">
          <marko-core-obj-text obj=author field="name">
            <@link href=author.websiteUrl target="_blank" />
          </marko-core-obj-text>
        </marko-core-obj-nodes>
      </else>
      <hr>
    </for>
  </marko-web-query>

  <marko-newsletters-mc-open-counter />

</common-document>
